"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_vueform_multiselect_dist_multiselect_js"],{

/***/ "./node_modules/@vueform/multiselect/dist/multiselect.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vueform/multiselect/dist/multiselect.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ script)\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-bundler.js\");\n\n\nfunction isNullish (val) {\n  return [null, undefined].indexOf(val) !== -1\n}\n\nfunction useData (props, context, dep)\n{\n  const { object, valueProp, mode } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  const $this = (0,vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)().proxy;\n\n  // ============ DEPENDENCIES ============\n\n  const iv = dep.iv;\n\n  // =============== METHODS ==============\n\n  const update = (val) => {\n    // Setting object(s) as internal value\n    iv.value = makeInternal(val);\n\n    // Setting object(s) or plain value as external \n    // value based on `option` setting\n    const externalVal = makeExternal(val);\n\n    context.emit('change', externalVal, $this);\n    context.emit('input', externalVal);\n    context.emit('update:modelValue', externalVal);\n  }; \n\n  // no export\n  const makeExternal = (val) => {\n    // If external value should be object\n    // no transformation is required\n    if (object.value) {\n      return val\n    }\n\n    // No need to transform if empty value\n    if (isNullish(val)) {\n      return val\n    }\n\n    // If external should be plain transform\n    // value object to plain values\n    return !Array.isArray(val) ? val[valueProp.value] : val.map(v => v[valueProp.value])\n  };\n\n  // no export\n  const makeInternal = (val) => {\n    if (isNullish(val)) {\n      return mode.value === 'single' ? {} : []\n    }\n\n    return val\n  };\n\n  return {\n    update,\n  }\n}\n\nfunction useValue (props, context)\n{\n  const { value, modelValue, mode, valueProp } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  // ================ DATA ================\n\n  // internalValue\n  const iv = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(mode.value !== 'single' ? [] : {});\n\n  // ============== COMPUTED ==============\n\n  /* istanbul ignore next */\n  // externalValue\n  const ev = context.expose !== undefined ? modelValue : value;\n\n  const plainValue = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return mode.value === 'single' ? iv.value[valueProp.value] : iv.value.map(v=>v[valueProp.value])\n  });\n\n  const textValue = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return mode.value !== 'single' ? iv.value.map(v=>v[valueProp.value]).join(',') : iv.value[valueProp.value]\n  });\n\n  return {\n    iv,\n    internalValue: iv,\n    ev,\n    externalValue: ev,\n    textValue,\n    plainValue,\n  }\n}\n\nfunction useSearch (props, context, dep)\n{  const { regex } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  const $this = (0,vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)().proxy;\n\n  // ============ DEPENDENCIES ============\n\n  const isOpen = dep.isOpen;\n  const open = dep.open;\n\n  // ================ DATA ================\n\n  const search = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  const input = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  // =============== METHODS ==============\n\n  const clearSearch = () => {\n    search.value = '';\n  };\n\n  const handleSearchInput = (e) => {\n    search.value = e.target.value;\n  };\n\n  const handleKeypress = (e) => {\n    if (regex && regex.value) {\n      let regexp = regex.value;\n\n      if (typeof regexp === 'string') {\n        regexp = new RegExp(regexp);\n      }\n\n      if (!e.key.match(regexp)) {\n        e.preventDefault();\n      }\n    }\n  };\n\n  const handlePaste = (e) => {\n    if (regex && regex.value) {\n      let clipboardData = e.clipboardData || /* istanbul ignore next */ window.clipboardData;\n      let pastedData = clipboardData.getData('Text');\n\n      let regexp = regex.value;\n\n      if (typeof regexp === 'string') {\n        regexp = new RegExp(regexp);\n      }\n      \n      if (!pastedData.split('').every(c => !!c.match(regexp))) {\n        e.preventDefault();\n      }\n    }\n\n    context.emit('paste', e, $this);\n  };\n\n  // ============== WATCHERS ==============\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(search, (val) => {\n    if (!isOpen.value && val) {\n      open();\n    }\n\n    context.emit('search-change', val, $this);\n  });\n\n  return {\n    search,\n    input,\n    clearSearch,\n    handleSearchInput,\n    handleKeypress,\n    handlePaste,\n  }\n}\n\nfunction usePointer$1 (props, context, dep)\n{\n  const { groupSelect, mode, groups, disabledProp } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  // ================ DATA ================\n\n  const pointer = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  // =============== METHODS ==============\n\n  const setPointer = (option) => {\n    if (option === undefined || (option !== null && option[disabledProp.value])) {\n      return\n    }\n\n    if (groups.value && option && option.group && (mode.value === 'single' || !groupSelect.value)) {\n      return\n    }\n\n    pointer.value = option;\n  };\n\n  const clearPointer = () => {\n    setPointer(null);\n  };\n\n  return {\n    pointer,\n    setPointer,\n    clearPointer,\n  }\n}\n\nfunction normalize (str, strict = true) {\n  return strict\n    ? String(str).toLowerCase().trim()\n    : String(str).normalize('NFD').replace(/\\p{Diacritic}/gu, '').toLowerCase().trim()\n}\n\nfunction isObject (variable) {\n  return Object.prototype.toString.call(variable) === '[object Object]'\n}\n\nfunction arraysEqual (array1, array2) {\n  const array2Sorted = array2.slice().sort();\n\n  return array1.length === array2.length && array1.slice().sort().every(function(value, index) {\n      return value === array2Sorted[index];\n  })\n}\n\nfunction useOptions (props, context, dep)\n{\n  const { \n    options, mode, trackBy: trackBy_, limit, hideSelected, createTag, createOption: createOption_, label,\n    appendNewTag, appendNewOption: appendNewOption_, multipleLabel, object, loading, delay, resolveOnLoad,\n    minChars, filterResults, clearOnSearch, clearOnSelect, valueProp,\n    canDeselect, max, strict, closeOnSelect, groups: groupped, reverse, infinite,\n    groupOptions, groupHideEmpty, groupSelect, onCreate, disabledProp, searchStart,\n  } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  const $this = (0,vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)().proxy;\n\n  // ============ DEPENDENCIES ============\n\n  const iv = dep.iv;\n  const ev = dep.ev;\n  const search = dep.search;\n  const clearSearch = dep.clearSearch;\n  const update = dep.update;\n  const pointer = dep.pointer;\n  const clearPointer = dep.clearPointer;\n  const focus = dep.focus;\n  const deactivate = dep.deactivate;\n  const close = dep.close;\n\n  // ================ DATA ================\n\n  // no export\n  // appendedOptions\n  const ap = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)([]);\n\n  // no export\n  // resolvedOptions\n  const ro = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)([]);\n\n  const resolving = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(false);\n\n  // no export\n  const searchWatcher = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  const offset = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(infinite.value && limit.value === -1 ? 10 : limit.value);\n\n  // ============== COMPUTED ==============\n\n  // no export\n  const createOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return createTag.value || createOption_.value || false\n  });\n\n  // no export\n  const appendNewOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    if (appendNewTag.value !== undefined) {\n      return appendNewTag.value\n    } else if (appendNewOption_.value !== undefined) {\n      return appendNewOption_.value\n    }\n\n    return true\n  });\n\n  // no export\n  // extendedOptions\n  const eo = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    if (groupped.value) {\n      let groups = ro.value || /* istanbul ignore next */ [];\n\n      let eo = [];\n\n      groups.forEach((group) => {\n        optionsToArray(group[groupOptions.value]).forEach((option) => {\n          eo.push(Object.assign({}, option, group[disabledProp.value] ? { [disabledProp.value]: true } : {}));\n        });\n      });\n\n      return eo\n    } else {\n      let eo = optionsToArray(ro.value || /* istanbul ignore next */ []);\n\n      if (ap.value.length) {\n        eo = eo.concat(ap.value);\n      }\n\n      return eo\n    }\n  });\n\n  const fg = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    if (!groupped.value) {\n      return []\n    }\n\n    return filterGroups((ro.value || /* istanbul ignore next */ []).map((group) => {\n      const arrayOptions = optionsToArray(group[groupOptions.value]);\n\n      return {\n        ...group,\n        group: true,\n        [groupOptions.value]: filterOptions(arrayOptions, false).map(o => Object.assign({}, o, group[disabledProp.value] ? { [disabledProp.value]: true } : {})),\n        __VISIBLE__: filterOptions(arrayOptions).map(o => Object.assign({}, o, group[disabledProp.value] ? { [disabledProp.value]: true } : {})),\n      }\n      // Difference between __VISIBLE__ and {groupOptions}: visible does not contain selected options when hideSelected=true\n    }))\n  });\n\n  // preFilteredOptions\n  const pfo = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    let options = eo.value;\n\n    if (reverse.value) {\n      options = options.reverse();\n    }\n\n    if (createdOption.value.length) {\n      options = createdOption.value.concat(options);\n    }\n\n    return filterOptions(options)\n  });\n\n  // filteredOptions\n  const fo = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    let options = pfo.value;\n\n    if (offset.value > 0) {\n      options = options.slice(0, offset.value);\n    }\n\n    return options\n  });\n\n  const hasSelected = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    switch (mode.value) {\n      case 'single':\n        return !isNullish(iv.value[valueProp.value])\n\n      case 'multiple':\n      case 'tags':\n        return !isNullish(iv.value) && iv.value.length > 0\n    }\n  });\n\n  const multipleLabelText = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return multipleLabel !== undefined && multipleLabel.value !== undefined\n      ? multipleLabel.value(iv.value, $this)\n      : (iv.value && iv.value.length > 1 ? `${iv.value.length} options selected` : `1 option selected`)\n  });\n\n  const noOptions = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return !eo.value.length && !resolving.value && !createdOption.value.length\n  });\n\n\n  const noResults = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return eo.value.length > 0 && fo.value.length == 0 && ((search.value && groupped.value) || !groupped.value)\n  });\n\n  // no export\n  const createdOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    if (createOption.value === false || !search.value) {\n      return []\n    }\n\n    return getOptionByTrackBy(search.value) !== -1 ? [] : [{\n      [valueProp.value]: search.value,\n      [label.value]: search.value,\n      [trackBy.value]: search.value,\n      __CREATE__: true,\n    }]\n  });\n\n  const trackBy = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return trackBy_.value || label.value\n  });\n\n  // no export\n  const nullValue = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    switch (mode.value) {\n      case 'single':\n        return null\n\n      case 'multiple':\n      case 'tags':\n        return []\n    }\n  });\n\n  const busy = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return loading.value || resolving.value\n  });\n\n  // =============== METHODS ==============\n\n  /**\n   * @param {array|object|string|number} option \n   */\n  const select = (option) => {\n    if (typeof option !== 'object') {\n      option = getOption(option);\n    }\n\n    switch (mode.value) {\n      case 'single':\n        update(option);\n        break\n\n      case 'multiple':\n      case 'tags':\n        update((iv.value).concat(option));\n        break\n    }\n\n    context.emit('select', finalValue(option), option, $this);\n  };\n\n  const deselect = (option) => {\n    if (typeof option !== 'object') {\n      option = getOption(option);\n    }\n\n    switch (mode.value) {\n      case 'single':\n        clear();\n        break\n\n      case 'tags':\n      case 'multiple':\n        update(Array.isArray(option)\n          ? iv.value.filter(v => option.map(o => o[valueProp.value]).indexOf(v[valueProp.value]) === -1)\n          : iv.value.filter(v => v[valueProp.value] != option[valueProp.value]));\n        break\n    }\n\n    context.emit('deselect', finalValue(option), option, $this);\n  };\n\n  // no export\n  const finalValue = (option) => {\n    return object.value ? option : option[valueProp.value]\n  };\n\n  const remove = (option) => {\n    deselect(option);\n  };\n\n  const handleTagRemove = (option, e) => {\n    if (e.button !== 0) {\n      e.preventDefault();\n      return\n    }\n\n    remove(option);\n  };\n\n  const clear = () => {\n    context.emit('clear', $this);\n    update(nullValue.value);\n  };\n\n  const isSelected = (option) => {\n    if (option.group !== undefined) {\n      return mode.value === 'single' ? false : areAllSelected(option[groupOptions.value]) && option[groupOptions.value].length\n    }\n\n    switch (mode.value) {\n      case 'single':\n        return !isNullish(iv.value) && iv.value[valueProp.value] == option[valueProp.value]\n\n      case 'tags':\n      case 'multiple':\n        return !isNullish(iv.value) && iv.value.map(o => o[valueProp.value]).indexOf(option[valueProp.value]) !== -1\n    }\n  };\n\n  const isDisabled = (option) => {\n    return option[disabledProp.value] === true\n  };\n\n  const isMax = () => {\n    if (max === undefined || max.value === -1 || (!hasSelected.value && max.value > 0)) {\n      return false\n    }\n    \n    return iv.value.length >= max.value\n  };\n\n  const handleOptionClick = (option) => {\n    if (isDisabled(option)) {\n      return\n    }\n\n    if (onCreate && onCreate.value && !isSelected(option) && option.__CREATE__) {\n      option = { ...option };\n      delete option.__CREATE__;\n\n      option = onCreate.value(option, $this);\n      \n      if (option instanceof Promise) {\n        resolving.value = true;\n        option.then((result) => {\n          resolving.value = false;\n          handleOptionSelect(result);\n        });\n\n        return\n      } \n    }\n\n    handleOptionSelect(option);\n  };\n\n  const handleOptionSelect = (option) => {\n    if (option.__CREATE__) {\n      option = { ...option };\n      delete option.__CREATE__;\n    }\n    \n    switch (mode.value) {\n      case 'single':\n        if (option && isSelected(option)) {\n          if (canDeselect.value) {\n            deselect(option);\n          }\n          return\n        }\n\n        if (option) {\n          handleOptionAppend(option);\n        }\n\n        /* istanbul ignore else */\n        if (clearOnSelect.value) {\n          clearSearch();\n        }\n\n        if (closeOnSelect.value) {\n          clearPointer();\n          close();\n        }\n\n        if (option) {\n          select(option);\n        }\n        break\n\n      case 'multiple':\n        if (option && isSelected(option)) {\n          deselect(option);\n          return\n        }\n\n        if (isMax()) {\n          return\n        }\n\n        if (option) {\n          handleOptionAppend(option);\n          select(option);\n        }\n\n        if (clearOnSelect.value) {\n          clearSearch();\n        }\n\n        if (hideSelected.value) {\n          clearPointer();\n        }\n\n        if (closeOnSelect.value) {\n          close();\n        }\n        break\n\n      case 'tags':\n        if (option && isSelected(option)) {\n          deselect(option);\n          return\n        }\n\n        if (isMax()) {\n          return\n        }\n\n        if (option) {\n          handleOptionAppend(option);\n        }\n\n        if (clearOnSelect.value) {\n          clearSearch();\n        }\n\n        if (option) {\n          select(option);\n        }\n\n        if (hideSelected.value) {\n          clearPointer();\n        }\n\n        if (closeOnSelect.value) {\n          close();\n        }\n        break\n    }\n\n    if (!closeOnSelect.value) {\n      focus();\n    }\n  };\n\n  const handleGroupClick = (group) => {\n    if (isDisabled(group) || mode.value === 'single' || !groupSelect.value) {\n      return\n    }\n\n    switch (mode.value) {\n      case 'multiple':\n      case 'tags':\n        if (areAllEnabledSelected(group[groupOptions.value])) {\n          deselect(group[groupOptions.value]);\n        } else {\n          select(group[groupOptions.value]\n            .filter(o => iv.value.map(v => v[valueProp.value]).indexOf(o[valueProp.value]) === -1)\n            .filter(o => !o[disabledProp.value])\n            .filter((o, k) => iv.value.length + 1 + k <= max.value || max.value === -1)\n          );\n        }\n        break\n    }\n\n    if (closeOnSelect.value) {\n      deactivate();\n    }\n  };\n\n  const handleOptionAppend = (option) => {\n    if (getOption(option[valueProp.value]) === undefined && createOption.value) {\n      context.emit('tag', option[valueProp.value], $this);\n      context.emit('option', option[valueProp.value], $this);\n\n      if (appendNewOption.value) {\n        appendOption(option);\n      }\n\n      clearSearch();\n    }\n  };\n\n  const selectAll = () => {\n    if (mode.value === 'single') {\n      return\n    }\n\n    select(fo.value);\n  };\n\n  // no export\n  const areAllEnabledSelected = (options) => {\n    return options.find(o => !isSelected(o) && !o[disabledProp.value]) === undefined\n  };\n\n  // no export\n  const areAllSelected = (options) => {\n    return options.find(o => !isSelected(o)) === undefined\n  };\n\n  const getOption = (val) => {\n    return eo.value[eo.value.map(o => String(o[valueProp.value])).indexOf(String(val))]\n  };\n\n  // no export\n  const getOptionByTrackBy = (val, norm) => {\n    return eo.value.map(o => parseInt(o[trackBy.value]) == o[trackBy.value] ? parseInt(o[trackBy.value]) : o[trackBy.value]).indexOf(\n      parseInt(val) == val ? parseInt(val) : val\n    )\n  };\n\n  // no export\n  const shouldHideOption = (option) => {\n    return ['tags', 'multiple'].indexOf(mode.value) !== -1 && hideSelected.value && isSelected(option)\n  };\n\n  // no export\n  const appendOption = (option) => {\n    ap.value.push(option);\n  };\n\n  // no export\n  const filterGroups = (groups) => {\n    // If the search has value we need to filter among \n    // he ones that are visible to the user to avoid\n    // displaying groups which technically have options\n    // based on search but that option is already selected.\n    return groupHideEmpty.value\n      ? groups.filter(g => search.value\n          ? g.__VISIBLE__.length\n          : g[groupOptions.value].length\n        )\n      : groups.filter(g => search.value ? g.__VISIBLE__.length : true)\n  };\n\n  // no export\n  const filterOptions = (options, excludeHideSelected = true) => {\n    let fo = options;\n    \n    if (search.value && filterResults.value) {\n      fo = fo.filter((option) => {\n        return searchStart.value\n          ? normalize(option[trackBy.value], strict.value).startsWith(normalize(search.value, strict.value))\n          : normalize(option[trackBy.value], strict.value).indexOf(normalize(search.value, strict.value)) !== -1\n      });\n    }\n\n    if (hideSelected.value && excludeHideSelected) {\n      fo = fo.filter((option) => !shouldHideOption(option));\n    }\n\n    return fo\n  };\n\n  // no export\n  const optionsToArray = (options) => {\n    let uo = options;\n    \n    // Transforming an object to an array of objects\n    if (isObject(uo)) {\n      uo = Object.keys(uo).map((key) => {\n        let val = uo[key];\n\n        return { [valueProp.value]: key, [trackBy.value]: val, [label.value]: val}\n      });\n    }\n\n    // Transforming an plain arrays to an array of objects\n    uo = uo.map((val) => {\n      return typeof val === 'object' ? val : { [valueProp.value]: val, [trackBy.value]: val, [label.value]: val}\n    });\n\n    return uo\n  };\n\n  // no export\n  const initInternalValue = () => {\n    if (!isNullish(ev.value)) {\n      iv.value = makeInternal(ev.value);\n    }\n  };\n\n  const resolveOptions = (callback) => {\n    resolving.value = true;\n\n    return new Promise((resolve, reject) => {\n      options.value(search.value, $this).then((response) => {\n        ro.value = response || [];\n\n        if (typeof callback == 'function') {\n          callback(response);\n        }\n\n        resolving.value = false;\n      }).catch((e) => {\n        console.error(e);\n\n        ro.value = [];\n\n        resolving.value = false;\n      }).finally(() => {\n        resolve();\n      });\n    })\n  };\n\n  // no export\n  const refreshLabels = () => {\n    if (!hasSelected.value) {\n      return\n    }\n\n    if (mode.value === 'single') {\n      let option = getOption(iv.value[valueProp.value]);\n\n      /* istanbul ignore else */\n      if (option !== undefined) {\n        let newLabel = option[label.value];\n\n        iv.value[label.value] = newLabel;\n\n        if (object.value) {\n          ev.value[label.value] = newLabel;\n        }\n      }\n    } else {\n      iv.value.forEach((val, i) => {\n        let option = getOption(iv.value[i][valueProp.value]);\n\n        /* istanbul ignore else */\n        if (option !== undefined) {\n          let newLabel = option[label.value];\n\n          iv.value[i][label.value] = newLabel;\n\n          if (object.value) {\n            ev.value[i][label.value] = newLabel;\n          }\n        }\n      });\n    }\n  };\n\n  const refreshOptions = (callback) => {\n    resolveOptions(callback);\n  };\n\n  // no export\n  const makeInternal = (val) => {\n    if (isNullish(val)) {\n      return mode.value === 'single' ? {} : []\n    }\n\n    if (object.value) {\n      return val\n    }\n\n    // If external should be plain transform\n    // value object to plain values\n    return mode.value === 'single' ? getOption(val) || {} : val.filter(v => !! getOption(v)).map(v => getOption(v))\n  };\n\n  // no export\n  const initSearchWatcher = () => {\n    searchWatcher.value = (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(search, (query) => {\n      if (query.length < minChars.value || (!query && minChars.value !== 0)) {\n        return\n      }\n\n      resolving.value = true;\n\n      if (clearOnSearch.value) {\n        ro.value = [];\n      }\n      setTimeout(() => {\n        if (query != search.value) {\n          return\n        }\n\n        options.value(search.value, $this).then((response) => {\n          if (query == search.value || !search.value) {\n            ro.value = response;\n            pointer.value = fo.value.filter(o => o[disabledProp.value] !== true)[0] || null;\n            resolving.value = false;\n          }\n        }).catch( /* istanbul ignore next */ (e) => {\n          console.error(e);\n        });\n      }, delay.value);\n\n    }, { flush: 'sync' });\n  };\n\n  // ================ HOOKS ===============\n\n  if (mode.value !== 'single' && !isNullish(ev.value) && !Array.isArray(ev.value)) {\n    throw new Error(`v-model must be an array when using \"${mode.value}\" mode`)\n  }\n\n  if (options && typeof options.value == 'function') {\n    if (resolveOnLoad.value) {\n      resolveOptions(initInternalValue);\n    } else if (object.value == true) {\n      initInternalValue();\n    }\n  }\n  else {\n    ro.value = options.value;\n\n    initInternalValue();\n  }\n  \n  // ============== WATCHERS ==============\n\n  if (delay.value > -1) {\n    initSearchWatcher();\n  }\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(delay, (value, old) => {\n    /* istanbul ignore else */\n    if (searchWatcher.value) {\n      searchWatcher.value();\n    }\n\n    if (value >= 0) {\n      initSearchWatcher();\n    }\n  });\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(ev, (newValue) => {\n    if (isNullish(newValue)) {\n      iv.value = makeInternal(newValue);\n      return\n    }\n\n    switch (mode.value) {\n      case 'single':\n        if (object.value ? newValue[valueProp.value] != iv.value[valueProp.value] : newValue != iv.value[valueProp.value]) {\n          iv.value = makeInternal(newValue);\n        }\n        break\n\n      case 'multiple':\n      case 'tags':\n        if (!arraysEqual(object.value ? newValue.map(o => o[valueProp.value]) : newValue, iv.value.map(o => o[valueProp.value]))) {\n          iv.value = makeInternal(newValue);\n        }\n        break\n    }\n  }, { deep: true });\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(options, (n, o) => {\n    if (typeof props.options === 'function') {\n      if (resolveOnLoad.value) {\n        resolveOptions();\n      }\n    } else {\n      ro.value = props.options;\n\n      if (!Object.keys(iv.value).length) {\n        initInternalValue();\n      }\n\n      refreshLabels();\n    }\n  });\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(label, refreshLabels);\n\n  return {\n    pfo,\n    fo,\n    filteredOptions: fo,\n    hasSelected,\n    multipleLabelText,\n    eo,\n    extendedOptions: eo,\n    fg,\n    filteredGroups: fg,\n    noOptions,\n    noResults,\n    resolving,\n    busy,\n    offset,\n    select,\n    deselect,\n    remove,\n    selectAll,\n    clear,\n    isSelected,\n    isDisabled,\n    isMax,\n    getOption,\n    handleOptionClick,\n    handleGroupClick,\n    handleTagRemove,\n    refreshOptions,\n    resolveOptions,\n    refreshLabels,\n  }\n}\n\nfunction usePointer (props, context, dep)\n{\n  const {\n    valueProp, showOptions, searchable, groupLabel,\n    groups: groupped, mode, groupSelect, disabledProp,\n  } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  // ============ DEPENDENCIES ============\n\n  const fo = dep.fo;\n  const fg = dep.fg;\n  const handleOptionClick = dep.handleOptionClick;\n  const handleGroupClick = dep.handleGroupClick;\n  const search = dep.search;\n  const pointer = dep.pointer;\n  const setPointer = dep.setPointer;\n  const clearPointer = dep.clearPointer;\n  const multiselect = dep.multiselect;\n  const isOpen = dep.isOpen;\n\n  // ============== COMPUTED ==============\n\n  // no export\n  const options = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return fo.value.filter(o => !o[disabledProp.value])\n  });\n\n  const groups = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return fg.value.filter(o => !o[disabledProp.value])\n  });\n\n  const canPointGroups = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return mode.value !== 'single' && groupSelect.value\n  });\n\n  const isPointerGroup = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return pointer.value && pointer.value.group\n  });\n\n  const currentGroup = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return getParentGroup(pointer.value)\n  });\n\n  const prevGroup = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    const group = isPointerGroup.value ? pointer.value : /* istanbul ignore next */ getParentGroup(pointer.value);\n    const groupIndex = groups.value.map(g => g[groupLabel.value]).indexOf(group[groupLabel.value]);\n    let prevGroup = groups.value[groupIndex - 1];\n\n    if (prevGroup === undefined) {\n      prevGroup = lastGroup.value;\n    }\n\n    return prevGroup\n  });\n  \n  const nextGroup = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    let nextIndex = groups.value.map(g => g.label).indexOf(isPointerGroup.value\n      ? pointer.value[groupLabel.value]\n      : getParentGroup(pointer.value)[groupLabel.value]) + 1;\n\n    if (groups.value.length <= nextIndex) {\n      nextIndex = 0;\n    }\n\n    return groups.value[nextIndex]\n  });\n\n  const lastGroup = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return [...groups.value].slice(-1)[0]\n  });\n  \n  const currentGroupFirstEnabledOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return pointer.value.__VISIBLE__.filter(o => !o[disabledProp.value])[0]\n  });\n\n  const currentGroupPrevEnabledOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    const options = currentGroup.value.__VISIBLE__.filter(o => !o[disabledProp.value]);\n    return options[options.map(o => o[valueProp.value]).indexOf(pointer.value[valueProp.value]) - 1]\n  });\n  \n  const currentGroupNextEnabledOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    const options = getParentGroup(pointer.value).__VISIBLE__.filter(o => !o[disabledProp.value]);\n    return options[options.map(o => o[valueProp.value]).indexOf(pointer.value[valueProp.value]) + 1]\n  });\n\n  const prevGroupLastEnabledOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return [...prevGroup.value.__VISIBLE__.filter(o => !o[disabledProp.value])].slice(-1)[0]\n  });\n\n  const lastGroupLastEnabledOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return [...lastGroup.value.__VISIBLE__.filter(o => !o[disabledProp.value])].slice(-1)[0]\n  });\n\n  // =============== METHODS ==============\n\n  const isPointed = (option) => {\n    return (!!pointer.value && (\n      (!option.group && pointer.value[valueProp.value] == option[valueProp.value]) ||\n      (option.group !== undefined && pointer.value[groupLabel.value] == option[groupLabel.value])\n    )) ? true : undefined\n  };\n\n  const setPointerFirst = () => {\n    setPointer(options.value[0] || null);\n  };\n\n  const selectPointer = () => {\n    if (!pointer.value || pointer.value[disabledProp.value] === true) {\n      return\n    }\n\n    if (isPointerGroup.value) {\n      handleGroupClick(pointer.value);\n    } else {\n      handleOptionClick(pointer.value);\n    }\n  };\n\n  const forwardPointer = () => {\n    if (pointer.value === null) {\n      setPointer((groupped.value && canPointGroups.value ? groups.value[0] : options.value[0]) || null);\n    }\n    else if (groupped.value && canPointGroups.value) {\n      let nextPointer = isPointerGroup.value ? currentGroupFirstEnabledOption.value : currentGroupNextEnabledOption.value;\n\n      if (nextPointer === undefined) {\n        nextPointer = nextGroup.value;\n      }\n\n      setPointer(nextPointer || /* istanbul ignore next */ null);\n    } else {\n      let next = options.value.map(o => o[valueProp.value]).indexOf(pointer.value[valueProp.value]) + 1;\n\n      if (options.value.length <= next) {\n        next = 0;\n      }\n\n      setPointer(options.value[next] || null);\n    }\n\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {\n      adjustWrapperScrollToPointer();\n    });\n  };\n\n  const backwardPointer = () => {\n    if (pointer.value === null) {\n      let prevPointer = options.value[options.value.length - 1];\n\n      if (groupped.value && canPointGroups.value) {\n        prevPointer = lastGroupLastEnabledOption.value;\n\n        if (prevPointer === undefined) {\n          prevPointer = lastGroup.value;\n        }\n      }\n\n      setPointer(prevPointer  || null);\n    }\n    else if (groupped.value && canPointGroups.value) {\n      let prevPointer = isPointerGroup.value ? prevGroupLastEnabledOption.value : currentGroupPrevEnabledOption.value;\n\n      if (prevPointer === undefined) {\n        prevPointer = isPointerGroup.value ? prevGroup.value : currentGroup.value;\n      }\n\n      setPointer(prevPointer || /* istanbul ignore next */ null);\n    } else {\n      let prevIndex = options.value.map(o => o[valueProp.value]).indexOf(pointer.value[valueProp.value]) - 1;\n\n      if (prevIndex < 0) {\n        prevIndex = options.value.length - 1;\n      }\n\n      setPointer(options.value[prevIndex] || null);\n    }\n\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {\n      adjustWrapperScrollToPointer();\n    });\n  };\n\n  const getParentGroup = (option) => {\n    return groups.value.find((group) => {\n      return group.__VISIBLE__.map(o => o[valueProp.value]).indexOf(option[valueProp.value]) !== -1\n    })\n  };\n\n  // no export\n  /* istanbul ignore next */\n  const adjustWrapperScrollToPointer = () => {\n    let pointedOption = multiselect.value.querySelector(`[data-pointed]`);\n\n    if (!pointedOption) {\n      return\n    }\n\n    let wrapper = pointedOption.parentElement.parentElement;\n\n    if (groupped.value) {\n      wrapper = isPointerGroup.value\n        ? pointedOption.parentElement.parentElement.parentElement\n        : pointedOption.parentElement.parentElement.parentElement.parentElement;\n    }\n\n    if (pointedOption.offsetTop + pointedOption.offsetHeight > wrapper.clientHeight + wrapper.scrollTop) {\n      wrapper.scrollTop = pointedOption.offsetTop + pointedOption.offsetHeight - wrapper.clientHeight;\n    }\n    \n    if (pointedOption.offsetTop < wrapper.scrollTop) {\n      wrapper.scrollTop = pointedOption.offsetTop;\n    }\n  };\n\n  // ============== WATCHERS ==============\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(search, (val) => {\n    if (searchable.value) {\n      if (val.length && showOptions.value) {\n        setPointerFirst();\n      } else {\n        clearPointer();\n      }\n    }\n  });\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(isOpen, (val) => {\n    if (val) {\n      let firstSelected = multiselect.value.querySelectorAll(`[data-selected]`)[0];\n\n      if (!firstSelected) {\n        return\n      }\n\n      let wrapper = firstSelected.parentElement.parentElement;\n      \n      (0,vue__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {\n        /* istanbul ignore next */\n        if (wrapper.scrollTop > 0) {\n          return\n        }\n\n        wrapper.scrollTop = firstSelected.offsetTop;\n      });\n    }\n  });\n\n  return {\n    pointer,\n    canPointGroups,\n    isPointed,\n    setPointerFirst,\n    selectPointer,\n    forwardPointer,\n    backwardPointer,\n  }\n}\n\nfunction useDropdown (props, context, dep)\n{\n  const { disabled } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  const $this = (0,vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)().proxy;\n\n  // ================ DATA ================\n\n  const isOpen = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(false);\n\n  // =============== METHODS ==============\n\n  const open = () => {\n    if (isOpen.value || disabled.value) {\n      return\n    }\n\n    isOpen.value = true;\n    context.emit('open', $this);\n  };\n\n  const close = () => {\n    if (!isOpen.value) {\n      return\n    }\n\n    isOpen.value = false;\n    context.emit('close', $this);\n  };\n\n  return {\n    isOpen,\n    open,\n    close,\n  }\n}\n\nfunction useMultiselect (props, context, dep)\n{\n  const { searchable, disabled } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  // ============ DEPENDENCIES ============\n\n  const input = dep.input;\n  const open = dep.open;\n  const close = dep.close;\n  const clearSearch = dep.clearSearch;\n  const isOpen = dep.isOpen;\n\n  // ================ DATA ================\n\n  const multiselect = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n  const tags = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  const isActive = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(false);\n\n  // ============== COMPUTED ==============\n\n  const tabindex = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return searchable.value || disabled.value ? -1 : 0\n  });\n\n  // =============== METHODS ==============\n\n  const blur = () => {\n    if (searchable.value) {\n      input.value.blur();\n    }\n\n    multiselect.value.blur();\n  };\n\n  const focus = () => {\n    if (searchable.value && !disabled.value) {\n      input.value.focus();\n    }\n  };\n\n  const handleFocus = () => {\n    focus();\n  };\n\n  const activate = () => {\n    if (disabled.value) {\n      return\n    }\n\n    isActive.value = true;\n\n    open();\n  };\n\n  const deactivate = () => {\n    isActive.value = false;\n\n    setTimeout(() => {\n      if (!isActive.value) {\n        close();\n        clearSearch();\n      }\n    }, 1);\n  };\n\n  const handleCaretClick = () => {\n    deactivate();\n    blur();\n  };\n\n  /* istanbul ignore next */\n  const handleMousedown = (e) => {\n    if (isOpen.value && (e.target.isEqualNode(multiselect.value) || e.target.isEqualNode(tags.value))) {\n      setTimeout(() => {\n        deactivate();\n      }, 0);\n    } else if (document.activeElement.isEqualNode(multiselect.value) && !isOpen.value) {\n      activate();    \n    }\n  };\n\n  return {\n    multiselect,\n    tags,\n    tabindex,\n    isActive,\n    blur,\n    focus,\n    handleFocus,\n    activate,\n    deactivate,\n    handleCaretClick,\n    handleMousedown,\n  }\n}\n\nfunction useKeyboard (props, context, dep)\n{\n  const {\n    mode, addTagOn, openDirection, searchable,\n    showOptions, valueProp, groups: groupped,\n    addOptionOn: addOptionOn_, createTag, createOption: createOption_,\n    reverse,\n  } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  const $this = (0,vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)().proxy;\n\n  // ============ DEPENDENCIES ============\n\n  const iv = dep.iv;\n  const update = dep.update;\n  const search = dep.search;\n  const setPointer = dep.setPointer;\n  const selectPointer = dep.selectPointer;\n  const backwardPointer = dep.backwardPointer;\n  const forwardPointer = dep.forwardPointer;\n  const isOpen = dep.isOpen;\n  const open = dep.open;\n  const blur = dep.blur;\n  const fo = dep.fo;\n\n  // ============== COMPUTED ==============\n\n  // no export\n  const createOption = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return createTag.value || createOption_.value || false\n  });\n\n  // no export\n  const addOptionOn = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    if (addTagOn.value !== undefined) {\n      return addTagOn.value\n    }\n    else if (addOptionOn_.value !== undefined) {\n      return addOptionOn_.value\n    }\n\n    return ['enter']\n  });\n\n  // =============== METHODS ==============\n\n  // no export\n  const preparePointer = () => {\n    // When options are hidden and creating tags is allowed\n    // no pointer will be set (because options are hidden).\n    // In such case we need to set the pointer manually to the \n    // first option, which equals to the option created from\n    // the search value.\n    if (mode.value === 'tags' && !showOptions.value && createOption.value && searchable.value && !groupped.value) {\n      setPointer(fo.value[fo.value.map(o => o[valueProp.value]).indexOf(search.value)]);\n    }\n  };\n\n  const handleKeydown = (e) => {\n    context.emit('keydown', e, $this);\n\n    switch (e.key) {\n      case 'Backspace':\n        if (mode.value === 'single') {\n          return\n        }\n\n        if (searchable.value && [null, ''].indexOf(search.value) === -1) {\n          return\n        }\n\n        if (iv.value.length === 0) {\n          return\n        }\n        \n        update([...iv.value].slice(0,-1));\n        break\n\n      case 'Enter':\n        e.preventDefault();\n\n        if (addOptionOn.value.indexOf('enter') === -1 && createOption.value) {\n          return\n        }\n        \n        preparePointer();\n        selectPointer();\n        break\n\n      case ' ':\n        if (!createOption.value && !searchable.value) {\n          e.preventDefault();\n          \n          preparePointer();\n          selectPointer();\n          return\n        }\n\n        if (!createOption.value) {\n          return false\n        } \n\n        if (addOptionOn.value.indexOf('space') === -1 && createOption.value) {\n          return\n        }\n\n        e.preventDefault();\n        \n        preparePointer();\n        selectPointer();\n        break\n      \n      case 'Tab':\n      case ';':\n      case ',':\n        if (addOptionOn.value.indexOf(e.key.toLowerCase()) === -1 || !createOption.value) {\n          return\n        }\n\n        preparePointer();\n        selectPointer();\n        e.preventDefault();\n        break\n\n      case 'Escape':\n        blur();\n        break\n\n      case 'ArrowUp':\n        e.preventDefault();\n\n        if (!showOptions.value) {\n          return\n        }\n\n        /* istanbul ignore else */\n        if (!isOpen.value) {\n          open();\n        }\n        \n        backwardPointer();\n        break\n\n      case 'ArrowDown':\n        e.preventDefault();\n\n        if (!showOptions.value) {\n          return\n        }\n\n        /* istanbul ignore else */\n        if (!isOpen.value) {\n          open();\n        }\n\n        forwardPointer();\n        break\n    }\n  };\n\n  const handleKeyup = (e) => {\n    context.emit('keyup', e, $this);\n  };\n\n  return {\n    handleKeydown,\n    handleKeyup,\n    preparePointer,\n  }\n}\n\nfunction useClasses (props, context, dependencies)\n{const { \n    classes: classes_, disabled, openDirection, showOptions\n  } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  // ============ DEPENDENCIES ============\n\n  const isOpen = dependencies.isOpen;\n  const isPointed = dependencies.isPointed;\n  const isSelected = dependencies.isSelected;\n  const isDisabled = dependencies.isDisabled;\n  const isActive = dependencies.isActive;\n  const canPointGroups = dependencies.canPointGroups;\n  const resolving = dependencies.resolving;\n  const fo = dependencies.fo;\n\n  const classes = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => ({\n    container: 'multiselect',\n    containerDisabled: 'is-disabled',\n    containerOpen: 'is-open',\n    containerOpenTop: 'is-open-top',\n    containerActive: 'is-active',\n    singleLabel: 'multiselect-single-label',\n    singleLabelText: 'multiselect-single-label-text',\n    multipleLabel: 'multiselect-multiple-label',\n    search: 'multiselect-search',\n    tags: 'multiselect-tags',\n    tag: 'multiselect-tag',\n    tagDisabled: 'is-disabled',\n    tagRemove: 'multiselect-tag-remove',\n    tagRemoveIcon: 'multiselect-tag-remove-icon',\n    tagsSearchWrapper: 'multiselect-tags-search-wrapper',\n    tagsSearch: 'multiselect-tags-search',\n    tagsSearchCopy: 'multiselect-tags-search-copy',\n    placeholder: 'multiselect-placeholder',\n    caret: 'multiselect-caret',\n    caretOpen: 'is-open',\n    clear: 'multiselect-clear',\n    clearIcon: 'multiselect-clear-icon',\n    spinner: 'multiselect-spinner',\n    inifinite: 'multiselect-inifite',\n    inifiniteSpinner: 'multiselect-inifite-spinner',\n    dropdown: 'multiselect-dropdown',\n    dropdownTop: 'is-top',\n    dropdownHidden: 'is-hidden',\n    options: 'multiselect-options',\n    optionsTop: 'is-top',\n    group: 'multiselect-group',\n    groupLabel: 'multiselect-group-label',\n    groupLabelPointable: 'is-pointable',\n    groupLabelPointed: 'is-pointed',\n    groupLabelSelected: 'is-selected',\n    groupLabelDisabled: 'is-disabled',\n    groupLabelSelectedPointed: 'is-selected is-pointed',\n    groupLabelSelectedDisabled: 'is-selected is-disabled',\n    groupOptions: 'multiselect-group-options',\n    option: 'multiselect-option',\n    optionPointed: 'is-pointed',\n    optionSelected: 'is-selected',\n    optionDisabled: 'is-disabled',\n    optionSelectedPointed: 'is-selected is-pointed',\n    optionSelectedDisabled: 'is-selected is-disabled',\n    noOptions: 'multiselect-no-options',\n    noResults: 'multiselect-no-results',\n    fakeInput: 'multiselect-fake-input',\n    spacer: 'multiselect-spacer',\n    ...classes_.value,\n  }));\n\n  // ============== COMPUTED ==============\n\n  const showDropdown = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return !!(isOpen.value && showOptions.value && (!resolving.value || (resolving.value && fo.value.length)))\n  });\n\n  const classList = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    const c = classes.value;\n\n    return {\n      container: [c.container]\n        .concat(disabled.value ? c.containerDisabled : [])\n        .concat(showDropdown.value && openDirection.value === 'top'  ? c.containerOpenTop : [])\n        .concat(showDropdown.value && openDirection.value !== 'top' ? c.containerOpen : [])\n        .concat(isActive.value ? c.containerActive : []),\n      spacer: c.spacer,\n      singleLabel: c.singleLabel,\n      singleLabelText: c.singleLabelText,\n      multipleLabel: c.multipleLabel,\n      search: c.search,\n      tags: c.tags,\n      tag: [c.tag]\n        .concat(disabled.value ? c.tagDisabled : []),\n      tagRemove: c.tagRemove,\n      tagRemoveIcon: c.tagRemoveIcon,\n      tagsSearchWrapper: c.tagsSearchWrapper,\n      tagsSearch: c.tagsSearch,\n      tagsSearchCopy: c.tagsSearchCopy,\n      placeholder: c.placeholder,\n      caret: [c.caret]\n        .concat(isOpen.value ? c.caretOpen : []),\n      clear: c.clear,\n      clearIcon: c.clearIcon,\n      spinner: c.spinner,\n      inifinite: c.inifinite,\n      inifiniteSpinner: c.inifiniteSpinner,\n      dropdown: [c.dropdown]\n        .concat(openDirection.value === 'top' ? c.dropdownTop : [])\n        .concat(!isOpen.value || !showOptions.value || !showDropdown.value ? c.dropdownHidden : []),\n      options: [c.options]\n        .concat(openDirection.value === 'top' ? c.optionsTop : []),\n      group: c.group,\n      groupLabel: (g) => {\n        let groupLabel = [c.groupLabel];\n\n        if (isPointed(g)) {\n          groupLabel.push(isSelected(g) ? c.groupLabelSelectedPointed : c.groupLabelPointed);\n        } else if (isSelected(g) && canPointGroups.value) {\n          groupLabel.push(isDisabled(g) ? c.groupLabelSelectedDisabled : c.groupLabelSelected);\n        } else if (isDisabled(g)) {\n          groupLabel.push(c.groupLabelDisabled);\n        }\n\n        if (canPointGroups.value) {\n          groupLabel.push(c.groupLabelPointable);\n        }\n\n        return groupLabel\n      },\n      groupOptions: c.groupOptions,\n      option: (o, g) => {\n        let option = [c.option];\n\n        if (isPointed(o)) {\n          option.push(isSelected(o) ? c.optionSelectedPointed : c.optionPointed);\n        } else if (isSelected(o)) {\n          option.push(isDisabled(o) ? c.optionSelectedDisabled : c.optionSelected);\n        } else if (isDisabled(o) || (g && isDisabled(g))) {\n          option.push(c.optionDisabled);\n        }\n\n        return option\n      },\n      noOptions: c.noOptions,\n      noResults: c.noResults,\n      fakeInput: c.fakeInput,\n    }\n  });\n\n  return {\n    classList,\n    showDropdown,\n  }\n}\n\nfunction useScroll$1 (props, context, dep)\n{\n  const {\n    limit, infinite,\n  } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  // ============ DEPENDENCIES ============\n\n  const isOpen = dep.isOpen;\n  const offset = dep.offset;\n  const search = dep.search;\n  const pfo = dep.pfo;\n  const eo = dep.eo;\n\n  // ================ DATA ================\n\n  // no export\n  const observer = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  const infiniteLoader = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  // ============== COMPUTED ==============\n\n  const hasMore = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return offset.value < pfo.value.length\n  });\n\n  // =============== METHODS ==============\n\n  // no export\n  /* istanbul ignore next */\n  const handleIntersectionObserver = (entries) => {\n    const { isIntersecting, target } = entries[0];\n\n    if (isIntersecting) {\n      const parent = target.offsetParent;\n      const scrollTop = parent.scrollTop;\n\n      offset.value += limit.value == -1 ? 10 : limit.value;\n\n      (0,vue__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {\n        parent.scrollTop = scrollTop;\n      });\n    }\n  };\n\n  const observe = () => {\n    /* istanbul ignore else */\n    if (isOpen.value && offset.value < pfo.value.length) {\n      observer.value.observe(infiniteLoader.value);\n    } else if (!isOpen.value && observer.value) {\n      observer.value.disconnect();\n    }\n  };\n\n  // ============== WATCHERS ==============\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(isOpen, () => {\n    if (!infinite.value) {\n      return\n    }\n\n    observe();\n  });\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(search, () => {\n    if (!infinite.value) {\n      return\n    }\n\n    offset.value = limit.value;\n\n    observe();\n  }, { flush: 'post' });\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(eo, () => {\n    if (!infinite.value) {\n      return\n    }\n\n    observe();\n  }, { immediate: false, flush: 'post' });\n\n  // ================ HOOKS ===============\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.onMounted)(() => {\n    /* istanbul ignore else */\n    if (window && window.IntersectionObserver) {\n      observer.value = new IntersectionObserver(handleIntersectionObserver);\n    }\n  });\n\n  return {\n    hasMore,\n    infiniteLoader,\n  }\n}\n\nfunction useScroll (props, context, dep)\n{\n  const { placeholder, id, valueProp, label: labelProp, mode, groupLabel } = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRefs)(props);\n\n  // ============ DEPENDENCIES ============\n\n  const pointer = dep.pointer;\n  const iv = dep.iv;\n  const isSelected = dep.isSelected;\n  const hasSelected = dep.hasSelected;\n  const multipleLabelText = dep.multipleLabelText;\n\n  // ================ DATA ================\n\n  const label = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);\n\n  // ============== COMPUTED ==============\n\n  const ariaOwns = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    let texts = [];\n\n    if (id && id.value) {\n      texts.push(id.value);\n    }\n\n    texts.push('multiselect-options');\n\n    return texts.join('-')\n  });\n\n  const ariaActiveDescendant = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    let texts = [];\n\n    if (id && id.value) {\n      texts.push(id.value);\n    }\n\n    texts.push('multiselect-option');\n\n    if (pointer.value && pointer.value[valueProp.value] !== undefined) {\n      texts.push(pointer.value[valueProp.value]);\n\n      return texts.join('-')\n    }\n  });\n\n  const ariaLabel = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    let texts = [];\n\n    /* istanbul ignore next */\n    if (label.value) {\n      texts.push(label.value);\n    }\n\n    if (placeholder.value && !hasSelected.value) {\n      texts.push(placeholder.value);\n    }\n\n    if (mode.value === 'single' && iv.value && iv.value[labelProp.value] !== undefined) {\n      texts.push(iv.value[labelProp.value]);\n    }\n\n    if (mode.value === 'multiple' && hasSelected.value) {\n      texts.push(multipleLabelText.value);\n    }\n\n    if (mode.value === 'tags' && hasSelected.value) {\n      texts.push(...iv.value.map(v => v[labelProp.value]));\n    }\n\n    return texts.join(', ')\n  });\n\n  const ariaPlaceholder = (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n    return ariaLabel.value\n  });\n\n  // =============== METHODS ==============\n\n  const ariaOptionId = (option) => {\n    let texts = [];\n\n    if (id && id.value) {\n      texts.push(id.value);\n    }\n\n    texts.push('multiselect-option');\n\n    texts.push(option[valueProp.value]);\n\n    return texts.join('-')\n  };\n\n  const ariaOptionLabel = (option) => {\n    let texts = [];\n\n    if (isSelected(option)) {\n      texts.push('✓');\n    }\n\n    texts.push(option[labelProp.value]);\n\n    return texts.join(' ')\n  };\n\n  const ariaGroupLabel = (group) => {\n    let texts = [];\n\n    texts.push(group[groupLabel.value]);\n\n    return texts.join(' ')\n  };\n\n  // =============== HOOKS ================\n\n  (0,vue__WEBPACK_IMPORTED_MODULE_0__.onMounted)(() => {\n    /* istanbul ignore next */\n    if (id && id.value && document && document.querySelector) {\n      let forTag = document.querySelector(`[for=\"${id.value}\"]`);\n      label.value = forTag ? forTag.innerText : null;\n    }\n  });\n\n  return {\n    ariaOwns,\n    ariaLabel,\n    ariaPlaceholder,\n    ariaActiveDescendant,\n    ariaOptionId,\n    ariaOptionLabel,\n    ariaGroupLabel,\n  }\n}\n\nfunction resolveDeps (props, context, features, deps = {}) {\n  features.forEach((composable) => {\n    /* istanbul ignore else */\n    if (composable) {\n      deps = {\n        ...deps,\n        ...composable(props, context, deps)\n      };\n    }\n\n  });\n  \n  return deps\n}\n\nvar script = {\n    name: 'Multiselect',\n    emits: [\n      'paste', 'open', 'close', 'select', 'deselect', \n      'input', 'search-change', 'tag', 'option', 'update:modelValue',\n      'change', 'clear', 'keydown', 'keyup',\n    ],\n    props: {\n      value: {\n        required: false,\n      },\n      modelValue: {\n        required: false,\n      },\n      options: {\n        type: [Array, Object, Function],\n        required: false,\n        default: () => ([])\n      },\n      id: {\n        type: [String, Number],\n        required: false,\n      },\n      name: {\n        type: [String, Number],\n        required: false,\n        default: 'multiselect',\n      },\n      disabled: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      label: {\n        type: String,\n        required: false,\n        default: 'label',\n      },\n      trackBy: {\n        type: String,\n        required: false,\n        default: undefined,\n      },\n      valueProp: {\n        type: String,\n        required: false,\n        default: 'value',\n      },\n      placeholder: {\n        type: String,\n        required: false,\n        default: null,\n      },\n      mode: {\n        type: String,\n        required: false,\n        default: 'single', // single|multiple|tags\n      },\n      searchable: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      limit: {\n        type: Number,\n        required: false,\n        default: -1,\n      },\n      hideSelected: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      createTag: {\n        type: Boolean,\n        required: false,\n        default: undefined,\n      },\n      createOption: {\n        type: Boolean,\n        required: false,\n        default: undefined,\n      },\n      appendNewTag: {\n        type: Boolean,\n        required: false,\n        default: undefined,\n      },\n      appendNewOption: {\n        type: Boolean,\n        required: false,\n        default: undefined,\n      },\n      addTagOn: {\n        type: Array,\n        required: false,\n        default: undefined,\n      },\n      addOptionOn: {\n        type: Array,\n        required: false,\n        default: undefined,\n      },\n      caret: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      loading: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      noOptionsText: {\n        type: String,\n        required: false,\n        default: 'The list is empty',\n      },\n      noResultsText: {\n        type: String,\n        required: false,\n        default: 'No results found',\n      },\n      multipleLabel: {\n        type: Function,\n        required: false,\n      },\n      object: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      delay: {\n        type: Number,\n        required: false,\n        default: -1,\n      },\n      minChars: {\n        type: Number,\n        required: false,\n        default: 0,\n      },\n      resolveOnLoad: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      filterResults: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      clearOnSearch: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      clearOnSelect: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      canDeselect: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      canClear: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      max: {\n        type: Number,\n        required: false,\n        default: -1,\n      },\n      showOptions: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      required: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      openDirection: {\n        type: String,\n        required: false,\n        default: 'bottom',\n      },\n      nativeSupport: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      classes: {\n        type: Object,\n        required: false,\n        default: () => ({})\n      },\n      strict: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      closeOnSelect: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      autocomplete: {\n        type: String,\n        required: false,\n      },\n      groups: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      groupLabel: {\n        type: String,\n        required: false,\n        default: 'label',\n      },\n      groupOptions: {\n        type: String,\n        required: false,\n        default: 'options',\n      },\n      groupHideEmpty: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      groupSelect: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      inputType: {\n        type: String,\n        required: false,\n        default: 'text',\n      },\n      attrs: {\n        required: false,\n        type: Object,\n        default: () => ({}),\n      },\n      onCreate: {\n        required: false,\n        type: Function,\n      },\n      disabledProp: {\n        type: String,\n        required: false,\n        default: 'disabled',\n      },\n      searchStart: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      reverse: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      regex: {\n        type: [Object, String, RegExp],\n        required: false,\n        default: undefined,\n      },\n      rtl: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n      infinite: {\n        type: Boolean,\n        required: false,\n        default: false,\n      },\n    },\n    setup(props, context)\n    { \n      return resolveDeps(props, context, [\n        useValue,\n        usePointer$1,\n        useDropdown,\n        useSearch,\n        useData,\n        useMultiselect,\n        useOptions,\n        useScroll$1,\n        usePointer,\n        useKeyboard,\n        useClasses,\n        useScroll,\n      ])\n    }\n  };\n\nconst _hoisted_1 = [\"tabindex\", \"id\", \"dir\", \"aria-owns\", \"aria-expanded\", \"aria-label\", \"aria-placeholder\", \"aria-activedescendant\"];\nconst _hoisted_2 = [\"type\", \"modelValue\", \"value\", \"autocomplete\", \"id\", \"aria-owns\", \"aria-expanded\", \"aria-label\", \"aria-placeholder\", \"aria-activedescendant\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"type\", \"modelValue\", \"value\", \"id\", \"autocomplete\", \"aria-owns\", \"aria-expanded\", \"aria-label\", \"aria-placeholder\", \"aria-activedescendant\"];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = [\"innerHTML\"];\nconst _hoisted_7 = [\"id\"];\nconst _hoisted_8 = [\"data-pointed\", \"onMouseenter\", \"onClick\"];\nconst _hoisted_9 = [\"innerHTML\"];\nconst _hoisted_10 = [\"aria-label\"];\nconst _hoisted_11 = [\"data-pointed\", \"data-selected\", \"id\", \"aria-label\", \"onMouseenter\", \"onClick\"];\nconst _hoisted_12 = [\"innerHTML\"];\nconst _hoisted_13 = [\"id\", \"aria-label\", \"data-pointed\", \"data-selected\", \"onMouseenter\", \"onClick\"];\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = [\"innerHTML\"];\nconst _hoisted_16 = [\"innerHTML\"];\nconst _hoisted_17 = [\"value\"];\nconst _hoisted_18 = [\"name\", \"value\"];\nconst _hoisted_19 = [\"name\", \"value\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", {\n    ref: \"multiselect\",\n    tabindex: _ctx.tabindex,\n    class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.container),\n    id: $props.searchable ? undefined : $props.id,\n    dir: $props.rtl ? 'rtl' : undefined,\n    \"aria-owns\": _ctx.ariaOwns,\n    \"aria-expanded\": _ctx.isOpen,\n    \"aria-label\": _ctx.ariaLabel,\n    \"aria-placeholder\": _ctx.ariaPlaceholder,\n    \"aria-activedescendant\": _ctx.ariaActiveDescendant,\n    onFocusin: _cache[8] || (_cache[8] = (...args) => (_ctx.activate && _ctx.activate(...args))),\n    onFocusout: _cache[9] || (_cache[9] = (...args) => (_ctx.deactivate && _ctx.deactivate(...args))),\n    onKeydown: _cache[10] || (_cache[10] = (...args) => (_ctx.handleKeydown && _ctx.handleKeydown(...args))),\n    onKeyup: _cache[11] || (_cache[11] = (...args) => (_ctx.handleKeyup && _ctx.handleKeyup(...args))),\n    onFocus: _cache[12] || (_cache[12] = (...args) => (_ctx.handleFocus && _ctx.handleFocus(...args))),\n    onMousedown: _cache[13] || (_cache[13] = (...args) => (_ctx.handleMousedown && _ctx.handleMousedown(...args))),\n    role: \"combobox\"\n  }, [\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Search \"),\n    ($props.mode !== 'tags' && $props.searchable && !$props.disabled)\n      ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"input\", (0,vue__WEBPACK_IMPORTED_MODULE_0__.mergeProps)({\n          key: 0,\n          type: $props.inputType,\n          modelValue: _ctx.search,\n          value: _ctx.search,\n          class: _ctx.classList.search,\n          autocomplete: $props.autocomplete,\n          id: $props.searchable ? $props.id : undefined\n        }, $props.attrs, {\n          \"aria-owns\": _ctx.ariaOwns,\n          \"aria-expanded\": _ctx.isOpen,\n          \"aria-label\": _ctx.ariaLabel,\n          \"aria-placeholder\": _ctx.ariaPlaceholder,\n          \"aria-activedescendant\": _ctx.ariaActiveDescendant,\n          onInput: _cache[0] || (_cache[0] = (...args) => (_ctx.handleSearchInput && _ctx.handleSearchInput(...args))),\n          onKeypress: _cache[1] || (_cache[1] = (...args) => (_ctx.handleKeypress && _ctx.handleKeypress(...args))),\n          onPaste: _cache[2] || (_cache[2] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.withModifiers)((...args) => (_ctx.handlePaste && _ctx.handlePaste(...args)), [\"stop\"])),\n          ref: \"input\",\n          role: \"combobox\"\n        }), null, 16 /* FULL_PROPS */, _hoisted_2))\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Tags (with search) \"),\n    ($props.mode == 'tags')\n      ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", {\n          key: 1,\n          class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.tags)\n        }, [\n          ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)(_ctx.iv, (option, i, key) => {\n            return (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"tag\", {\n              option: option,\n              handleTagRemove: _ctx.handleTagRemove,\n              disabled: $props.disabled\n            }, () => [\n              ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"span\", {\n                class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.tag),\n                key: key\n              }, [\n                (0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)((0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)(option[$props.label]) + \" \", 1 /* TEXT */),\n                (!$props.disabled)\n                  ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"span\", {\n                      key: 0,\n                      class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.tagRemove),\n                      onClick: $event => (_ctx.handleTagRemove(option, $event))\n                    }, [\n                      (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n                        class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.tagRemoveIcon)\n                      }, null, 2 /* CLASS */)\n                    ], 10 /* CLASS, PROPS */, _hoisted_3))\n                  : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true)\n              ], 2 /* CLASS */))\n            ])\n          }), 256 /* UNKEYED_FRAGMENT */)),\n          (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.tagsSearchWrapper),\n            ref: \"tags\"\n          }, [\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Used for measuring search width \"),\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n              class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.tagsSearchCopy)\n            }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)(_ctx.search), 3 /* TEXT, CLASS */),\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Actual search input \"),\n            ($props.searchable && !$props.disabled)\n              ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"input\", (0,vue__WEBPACK_IMPORTED_MODULE_0__.mergeProps)({\n                  key: 0,\n                  type: $props.inputType,\n                  modelValue: _ctx.search,\n                  value: _ctx.search,\n                  class: _ctx.classList.tagsSearch,\n                  id: $props.searchable ? $props.id : undefined,\n                  autocomplete: $props.autocomplete\n                }, $props.attrs, {\n                  \"aria-owns\": _ctx.ariaOwns,\n                  \"aria-expanded\": _ctx.isOpen,\n                  \"aria-label\": _ctx.ariaLabel,\n                  \"aria-placeholder\": _ctx.ariaPlaceholder,\n                  \"aria-activedescendant\": _ctx.ariaActiveDescendant,\n                  onInput: _cache[3] || (_cache[3] = (...args) => (_ctx.handleSearchInput && _ctx.handleSearchInput(...args))),\n                  onKeypress: _cache[4] || (_cache[4] = (...args) => (_ctx.handleKeypress && _ctx.handleKeypress(...args))),\n                  onPaste: _cache[5] || (_cache[5] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.withModifiers)((...args) => (_ctx.handlePaste && _ctx.handlePaste(...args)), [\"stop\"])),\n                  ref: \"input\",\n                  role: \"combobox\"\n                }), null, 16 /* FULL_PROPS */, _hoisted_4))\n              : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true)\n          ], 2 /* CLASS */)\n        ], 2 /* CLASS */))\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Single label \"),\n    ($props.mode == 'single' && _ctx.hasSelected && !_ctx.search && _ctx.iv)\n      ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"singlelabel\", {\n          key: 2,\n          value: _ctx.iv\n        }, () => [\n          (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.singleLabel)\n          }, [\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n              class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.singleLabelText),\n              innerHTML: _ctx.iv[$props.label]\n            }, null, 10 /* CLASS, PROPS */, _hoisted_5)\n          ], 2 /* CLASS */)\n        ])\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Multiple label \"),\n    ($props.mode == 'multiple' && _ctx.hasSelected && !_ctx.search)\n      ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"multiplelabel\", {\n          key: 3,\n          values: _ctx.iv\n        }, () => [\n          (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.multipleLabel),\n            innerHTML: _ctx.multipleLabelText\n          }, null, 10 /* CLASS, PROPS */, _hoisted_6)\n        ])\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Placeholder \"),\n    ($props.placeholder && !_ctx.hasSelected && !_ctx.search)\n      ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"placeholder\", { key: 4 }, () => [\n          (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.placeholder)\n          }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.placeholder), 3 /* TEXT, CLASS */)\n        ])\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Spinner \"),\n    ($props.loading || _ctx.resolving)\n      ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"spinner\", { key: 5 }, () => [\n          (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.spinner)\n          }, null, 2 /* CLASS */)\n        ])\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Clear \"),\n    (_ctx.hasSelected && !$props.disabled && $props.canClear && !_ctx.busy)\n      ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"clear\", {\n          key: 6,\n          clear: _ctx.clear\n        }, () => [\n          (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.clear),\n            onClick: _cache[6] || (_cache[6] = (...args) => (_ctx.clear && _ctx.clear(...args)))\n          }, [\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n              class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.clearIcon)\n            }, null, 2 /* CLASS */)\n          ], 2 /* CLASS */)\n        ])\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Caret \"),\n    ($props.caret && $props.showOptions)\n      ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"caret\", { key: 7 }, () => [\n          (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.caret),\n            onClick: _cache[7] || (_cache[7] = (...args) => (_ctx.handleCaretClick && _ctx.handleCaretClick(...args)))\n          }, null, 2 /* CLASS */)\n        ])\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Options \"),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n      class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.dropdown),\n      tabindex: \"-1\"\n    }, [\n      (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"beforelist\", { options: _ctx.fo }),\n      (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"ul\", {\n        class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.options),\n        id: _ctx.ariaOwns,\n        role: \"listbox\"\n      }, [\n        ($props.groups)\n          ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, { key: 0 }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)(_ctx.fg, (group, i, key) => {\n              return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"li\", {\n                class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.group),\n                key: key\n              }, [\n                (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n                  class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.groupLabel(group)),\n                  \"data-pointed\": _ctx.isPointed(group),\n                  onMouseenter: $event => (_ctx.setPointer(group)),\n                  onClick: $event => (_ctx.handleGroupClick(group)),\n                  role: \"none\"\n                }, [\n                  (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"grouplabel\", {\n                    group: group,\n                    isSelected: _ctx.isSelected,\n                    isPointed: _ctx.isPointed\n                  }, () => [\n                    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n                      innerHTML: group[$props.groupLabel]\n                    }, null, 8 /* PROPS */, _hoisted_9)\n                  ])\n                ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_8),\n                (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"ul\", {\n                  class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.groupOptions),\n                  \"aria-label\": _ctx.ariaGroupLabel(group),\n                  role: \"group\"\n                }, [\n                  ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)(group.__VISIBLE__, (option, i, key) => {\n                    return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"li\", {\n                      class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.option(option, group)),\n                      key: key,\n                      \"data-pointed\": _ctx.isPointed(option),\n                      \"data-selected\": _ctx.isSelected(option) || undefined,\n                      id: _ctx.ariaOptionId(option),\n                      \"aria-label\": _ctx.ariaOptionLabel(option),\n                      onMouseenter: $event => (_ctx.setPointer(option)),\n                      onClick: $event => (_ctx.handleOptionClick(option)),\n                      role: \"option\"\n                    }, [\n                      (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"option\", {\n                        option: option,\n                        isSelected: _ctx.isSelected,\n                        isPointed: _ctx.isPointed,\n                        search: _ctx.search\n                      }, () => [\n                        (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n                          innerHTML: option[$props.label]\n                        }, null, 8 /* PROPS */, _hoisted_12)\n                      ])\n                    ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_11))\n                  }), 128 /* KEYED_FRAGMENT */))\n                ], 10 /* CLASS, PROPS */, _hoisted_10)\n              ], 2 /* CLASS */))\n            }), 128 /* KEYED_FRAGMENT */))\n          : ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, { key: 1 }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)(_ctx.fo, (option, i, key) => {\n              return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"li\", {\n                id: _ctx.ariaOptionId(option),\n                \"aria-label\": _ctx.ariaOptionLabel(option),\n                class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.option(option)),\n                key: key,\n                \"data-pointed\": _ctx.isPointed(option),\n                \"data-selected\": _ctx.isSelected(option) || undefined,\n                onMouseenter: $event => (_ctx.setPointer(option)),\n                onClick: $event => (_ctx.handleOptionClick(option)),\n                role: \"option\"\n              }, [\n                (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"option\", {\n                  option: option,\n                  isSelected: _ctx.isSelected,\n                  isPointed: _ctx.isPointed,\n                  search: _ctx.search\n                }, () => [\n                  (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n                    innerHTML: option[$props.label]\n                  }, null, 8 /* PROPS */, _hoisted_14)\n                ])\n              ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_13))\n            }), 128 /* KEYED_FRAGMENT */))\n      ], 10 /* CLASS, PROPS */, _hoisted_7),\n      (_ctx.noOptions)\n        ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"nooptions\", { key: 0 }, () => [\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n              class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.noOptions),\n              innerHTML: $props.noOptionsText\n            }, null, 10 /* CLASS, PROPS */, _hoisted_15)\n          ])\n        : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n      (_ctx.noResults)\n        ? (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"noresults\", { key: 1 }, () => [\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n              class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.noResults),\n              innerHTML: $props.noResultsText\n            }, null, 10 /* CLASS, PROPS */, _hoisted_16)\n          ])\n        : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n      ($props.infinite && _ctx.hasMore)\n        ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", {\n            key: 2,\n            class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.inifinite),\n            ref: \"infiniteLoader\"\n          }, [\n            (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"infinite\", {}, () => [\n              (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n                class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.inifiniteSpinner)\n              }, null, 2 /* CLASS */)\n            ])\n          ], 2 /* CLASS */))\n        : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n      (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \"afterlist\", { options: _ctx.fo })\n    ], 2 /* CLASS */),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Hacky input element to show HTML5 required warning \"),\n    ($props.required)\n      ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"input\", {\n          key: 8,\n          class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.fakeInput),\n          tabindex: \"-1\",\n          value: _ctx.textValue,\n          required: \"\"\n        }, null, 10 /* CLASS, PROPS */, _hoisted_17))\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Native input support \"),\n    ($props.nativeSupport)\n      ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, { key: 9 }, [\n          ($props.mode == 'single')\n            ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"input\", {\n                key: 0,\n                type: \"hidden\",\n                name: $props.name,\n                value: _ctx.plainValue !== undefined ? _ctx.plainValue : ''\n              }, null, 8 /* PROPS */, _hoisted_18))\n            : ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, { key: 1 }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)(_ctx.plainValue, (v, i) => {\n                return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"input\", {\n                  type: \"hidden\",\n                  name: `${$props.name}[]`,\n                  value: v,\n                  key: i\n                }, null, 8 /* PROPS */, _hoisted_19))\n              }), 128 /* KEYED_FRAGMENT */))\n        ], 64 /* STABLE_FRAGMENT */))\n      : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Create height for empty input \"),\n    (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n      class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)(_ctx.classList.spacer)\n    }, null, 2 /* CLASS */)\n  ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_1))\n}\n\nscript.render = render;\nscript.__file = \"src/Multiselect.vue\";\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vueform/multiselect/dist/multiselect.js\n");

/***/ })

}]);